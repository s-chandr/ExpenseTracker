{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/Incomeexpenses.js","components/Transactions.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","Incomeexpenses","alltransactions","expenses","income","className","Transactions","sign","text","Math","abs","onClick","TransactionList","toast","configure","AddTransaction","useState","setAmount","setText","onSubmit","e","preventDefault","newTransaction","floor","random","notify","htmlFor","onChange","event","target","placeholder","HtmlFor","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.500ac37c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n           Expense Tracker \r\n        </h2>\r\n    )\r\n}\r\n","export default (state,action ) =>{\r\n    switch(action.type)\r\n    {   \r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload )\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions:[ action.payload , ...state.transactions]\r\n                // transactions: state.transactions.push({payload})\r\n                \r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React , {createContext , useReducer}from 'react'\r\nimport AppReducer from './AppReducer'\r\n\r\n// Initial State\r\nconst initialState = {\r\n    transactions: [    \r\n        // { id: 1, text: 'Flower', amount: -20 },\r\n        // { id: 2, text: 'Salary', amount: 300 },\r\n        // { id: 3, text: 'Book', amount: -10 },\r\n        // { id: 4, text: 'Camera', amount: 150 }\r\n        \r\n    ]\r\n}\r\n    //create  global context  \r\nexport const GlobalContext = createContext(initialState);\r\n\r\n    // create provider component \r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state,dispatch] = useReducer(AppReducer,initialState);\r\n\r\n    //Actions make calls to our reducer \r\n    function deleteTransaction(id){\r\n        dispatch({\r\n            type:'DELETE_TRANSACTION', \r\n            payload:id\r\n        }); \r\n    }\r\n    function addTransaction(transaction){\r\n        dispatch({\r\n            type:'ADD_TRANSACTION',\r\n            payload:transaction\r\n        })\r\n    }\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n        }}>\r\n        {children}\r\n    </GlobalContext.Provider>);\r\n\r\n}","import React ,{useContext} from 'react'\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\n\r\n\r\nexport const Balance = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n    const alltransactions = transactions.map( transaction => transaction.amount);\r\n    const total = alltransactions.reduce((acc, item )=> (acc+=item) , 0).toFixed(2);  \r\n\r\n    return (\r\n        <div>\r\n            <h4>Your Balance</h4>\r\n            <h1 id=\"balance\">${total}</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useContext,useState}  from 'react'\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const Incomeexpenses = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n    const alltransactions = transactions.map( transaction => transaction.amount);\r\n    // const total = alltransactions.reduce((acc, item )=> (acc+=item) , 0).toFixed(2);\r\n    const  expenses = alltransactions.filter(item => item < 0 ).reduce((acc, item )=> (acc+=item) , 0).toFixed(2);\r\n    const  income = alltransactions.filter(item => item > 0 ).reduce((acc, item )=> (acc+=item) , 0).toFixed(2);\r\n    \r\n    return (\r\n        \r\n        <div className=\"inc-exp-container\">\r\n        \r\n        <div> \r\n          <h4>Income</h4>\r\n          <p id=\"money-plus\" className=\"money plus\">${income}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n          <p id=\"money-minus\" className=\"money minus\">${expenses}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n","import React,{useContext} from 'react'\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const Transactions = ({transaction}) => {\r\n    const{ deleteTransaction } = useContext(GlobalContext);\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n    return (\r\n        <div>\r\n            <li className={transaction.amount<0?\"minus\":'plus'}>\r\n              {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span>\r\n              \r\n              <button onClick={ () => deleteTransaction(transaction.id) } className=\"delete-btn\" >x</button>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useContext} from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { Transactions } from \"./Transactions\";\r\n\r\nexport const TransactionList = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n\r\n    return (\r\n        <>\r\n      <h3>History</h3>\r\n      <ul id=\"list\" className=\"list\">\r\n          {transactions.map(transaction => (\r\n              <Transactions  key = {transaction.id} transaction ={transaction}  />\r\n          ))\r\n          }\r\n        \r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n","import React ,{useState,useContext} from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nimport {toast} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css' \r\n\r\ntoast.configure()\r\n\r\nexport const AddTransaction = () => {\r\n    const {addTransaction} = useContext(GlobalContext);\r\n    const {transactions} = useContext(GlobalContext);\r\n    const alltransactions = transactions.map( transaction => transaction.amount);\r\n    const total = alltransactions.reduce((acc, item )=> (acc+=item) , 0).toFixed(2);\r\n    const [amount,setAmount] = useState(0);\r\n    const [text,setText] = useState(\"\");\r\n    \r\n    const notify = (text) =>{\r\n      toast(`Don't be too hard on your pocket \\n Delete the last transaction of $ ${text} `);\r\n    }\r\n    const onSubmit = e => {\r\n\r\n      e.preventDefault();\r\n      const newTransaction = {\r\n        id: Math.floor(Math.random() * 100000000),\r\n        text,\r\n        amount: +amount\r\n      }\r\n      addTransaction(newTransaction);\r\n      if(+total + +amount < 0){\r\n          notify(+amount);\r\n      }\r\n    }\r\n  return (\r\n    <div>\r\n      <h3>Add new transaction</h3>\r\n      <form id=\"form\" onSubmit = {onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input type=\"text\" value = {text} onChange={(event) => setText(event.target.value)} id=\"text\" placeholder=\"Enter text...\" />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label HtmlFor=\"amount\">\r\n            Amount <br />\r\n            (negative - expense, positive - income)\r\n          </label>\r\n          <input type=\"number\" value = {amount} onChange={(event) => setAmount(event.target.value)} id=\"amount\" placeholder=\"Enter amount...\" />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { Incomeexpenses } from './components/Incomeexpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState';\n\n\n\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <>\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <Incomeexpenses />\n        <TransactionList />\n        <AddTransaction />\n        \n      </div>\n\n    </GlobalProvider>\n    \n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}